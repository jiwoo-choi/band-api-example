{"/examples/get_post_permission":{"title":"사용자 정보 조회","data":{"":"로그인 사용자의 프로필 정보를 가져옵니다.\nconst ACCESS_TOKEN = '발급받은 ACCESS_TOKEN 입력';\nconst HOST = \"https://openapi.band.us\";\nconst API = \"/v2/band/permissions\";\n// parameters\nconst BAND_KEY = \"검색할_밴드_키\";\nconst PERMISSIONS = [\"posting\",\"commenting\",\"contents_deletion\"].join(',');\nconst xhr = new XMLHttpRequest();\nxhr.onload = function () {\n  if (xhr.status != 200) {\n    // Error!\n    return;\n  }\n  var responseObj = xhr.response;\n  console.log(responseObj); // response!\n}\nxhr.open(\"GET\", `${HOST}${API}?access_token=${ACCESS_TOKEN}&band_key=${BAND_KEY}&permissions=${PERMISSIONS}`);\nxhr.setRequestHeader('Content-Type', 'application/json');\nxhr.responseType = \"json\";\nxhr.send();\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse lib \"lib\";\nuse Https;\nuse Prop;\nuse Json;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 1]\\n\";\nmy $prop = Prop->new(\"info.txt\", \" \");\nmy ($access_token) = $prop->gets(\"access_token\");\nprintf \"환경파일 읽기에 성공했습니다.\\naccess token은 %s입니다.\\n\", $access_token;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 2]\\n\";\nmy $https = Https->new;\n$https->host(\"naver.com\")\n->url(\"/\")\n;\nmy $result = $https->get();\nprintf \"naver.com에 요청을 보냅니다.\\n%s\", $result;\nprint \"\\n\", \"#\"x80, \"\\n\";","더-알아보기#더 알아보기":""}},"/examples/get_post":{"title":"사용자 정보 조회","data":{"":"로그인 사용자의 프로필 정보를 가져옵니다.\nconst ACCESS_TOKEN = '발급받은 ACCESS_TOKEN 입력';\nconst HOST = \"https://openapi.band.us\";\nconst API = \"/v2.1/band/post\";\n// parameters\nconst BAND_KEY = \"검색할_밴드_키\";\nconst POST_KEY = \"검색할_포스트_키\";\nconst xhr = new XMLHttpRequest();\nxhr.onload = function () {\n  if (xhr.status != 200) {\n    // Error!\n    return;\n  }\n  var responseObj = xhr.response;\n  console.log(responseObj); // response!\n}\nxhr.open(\"GET\", `${HOST}${API}?access_token=${ACCESS_TOKEN}&band_key=${BAND_KEY}&post_key=${POST_KEY}`);\nxhr.setRequestHeader('Content-Type', 'application/json');\nxhr.responseType = \"json\";\nxhr.send();\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse lib \"lib\";\nuse Https;\nuse Prop;\nuse Json;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 1]\\n\";\nmy $prop = Prop->new(\"info.txt\", \" \");\nmy ($access_token) = $prop->gets(\"access_token\");\nprintf \"환경파일 읽기에 성공했습니다.\\naccess token은 %s입니다.\\n\", $access_token;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 2]\\n\";\nmy $https = Https->new;\n$https->host(\"naver.com\")\n->url(\"/\")\n;\nmy $result = $https->get();\nprintf \"naver.com에 요청을 보냅니다.\\n%s\", $result;\nprint \"\\n\", \"#\"x80, \"\\n\";","더-알아보기#더 알아보기":""}},"/examples/get_user_information":{"title":"사용자 정보 조회","data":{"":"로그인 사용자의 프로필 정보를 가져옵니다.\nconst ACCESS_TOKEN = '발급받은 ACCESS_TOKEN 입력';\nconst HOST = \"https://openapi.band.us\";\nconst API = \"/v2/profile\"\n// parameters\nconst BAND_KEY = \"검색할_밴드_키\"\nconst xhr = new XMLHttpRequest();\nxhr.onload = function () {\n  if (xhr.status != 200) {\n    // Error!\n    return;\n  }\n  var responseObj = xhr.response;\n  console.log(responseObj); // response!\n}\nxhr.open(\"GET\", `${HOST}${API}?access_token=${ACCESS_TOKEN}&band_key={BAND_KEY}`);\nxhr.setRequestHeader('Content-Type', 'application/json');\nxhr.responseType = \"json\";\nxhr.send();\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse lib \"lib\";\nuse Https;\nuse Prop;\nuse Json;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 1]\\n\";\nmy $prop = Prop->new(\"info.txt\", \" \");\nmy ($access_token) = $prop->gets(\"access_token\");\nprintf \"환경파일 읽기에 성공했습니다.\\naccess token은 %s입니다.\\n\", $access_token;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 2]\\n\";\nmy $https = Https->new;\n$https->host(\"naver.com\")\n->url(\"/\")\n;\nmy $result = $https->get();\nprintf \"naver.com에 요청을 보냅니다.\\n%s\", $result;\nprint \"\\n\", \"#\"x80, \"\\n\";","더-알아보기#더 알아보기":""}},"/examples/remove_comment":{"title":"사용자 정보 조회","data":{"":"로그인 사용자의 프로필 정보를 가져옵니다.\nconst ACCESS_TOKEN = '발급받은 ACCESS_TOKEN 입력';\nconst HOST = \"https://openapi.band.us\";\nconst API = \"/v2/band/post/comment/remove\";\n// parameters\nconst BAND_KEY = \"검색할_밴드_키\";\nconst POST_KEY = \"검색할_포스트_키\";\nconst COMMENT_KEY = \"검색할_댓글_키\";\nconst xhr = new XMLHttpRequest();\nxhr.onload = function () {\n  if (xhr.status != 200) {\n    // Error!\n    return;\n  }\n  var responseObj = xhr.response;\n  console.log(responseObj); // response!\n}\nxhr.open(\"POST\", `${HOST}${API}?access_token=${ACCESS_TOKEN}&band_key=${BAND_KEY}&post_key=${POST_KEY}&comment_key=${COMMENT_KEY}`);\nxhr.setRequestHeader('Content-Type', 'application/json');\nxhr.responseType = \"json\";\nxhr.send();\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse lib \"lib\";\nuse Https;\nuse Prop;\nuse Json;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 1]\\n\";\nmy $prop = Prop->new(\"info.txt\", \" \");\nmy ($access_token) = $prop->gets(\"access_token\");\nprintf \"환경파일 읽기에 성공했습니다.\\naccess token은 %s입니다.\\n\", $access_token;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 2]\\n\";\nmy $https = Https->new;\n$https->host(\"naver.com\")\n->url(\"/\")\n;\nmy $result = $https->get();\nprintf \"naver.com에 요청을 보냅니다.\\n%s\", $result;\nprint \"\\n\", \"#\"x80, \"\\n\";","더-알아보기#더 알아보기":""}},"/examples/get_photos":{"title":"사용자 정보 조회","data":{"":"로그인 사용자의 프로필 정보를 가져옵니다.\nconst ACCESS_TOKEN = '발급받은 ACCESS_TOKEN 입력';\nconst HOST = \"https://openapi.band.us\";\nconst API = \"/v2/band/album/photos\"\n// parameters\nconst BAND_KEY = \"검색할_밴드_키\"\nconst PHOTO_ALBUM_KEY = \"검색할_포토_앨범_키\";\nconst xhr = new XMLHttpRequest();\nxhr.onload = function () {\n  if (xhr.status != 200) {\n    // Error!\n    return;\n  }\n  var responseObj = xhr.response;\n  console.log(responseObj); // response!\n}\nxhr.open(\"GET\", `${HOST}${API}?access_token=${ACCESS_TOKEN}&band_key=${BAND_KEY}&photo_album_key=${PHOTO_ALBUM_KEY}`);\nxhr.setRequestHeader('Content-Type', 'application/json');\nxhr.responseType = \"json\";\nxhr.send();\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse lib \"lib\";\nuse Https;\nuse Prop;\nuse Json;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 1]\\n\";\nmy $prop = Prop->new(\"info.txt\", \" \");\nmy ($access_token) = $prop->gets(\"access_token\");\nprintf \"환경파일 읽기에 성공했습니다.\\naccess token은 %s입니다.\\n\", $access_token;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 2]\\n\";\nmy $https = Https->new;\n$https->host(\"naver.com\")\n->url(\"/\")\n;\nmy $result = $https->get();\nprintf \"naver.com에 요청을 보냅니다.\\n%s\", $result;\nprint \"\\n\", \"#\"x80, \"\\n\";","더-알아보기#더 알아보기":""}},"/examples/get_posts":{"title":"사용자 정보 조회","data":{"":"로그인 사용자의 프로필 정보를 가져옵니다.\nconst ACCESS_TOKEN = '발급받은 ACCESS_TOKEN 입력';\nconst HOST = \"https://openapi.band.us\";\nconst API = \"/v2/band/posts\";\n// parameters\nconst BAND_KEY = \"검색할_밴드_키\";\nconst LOCALE = \"en_US\"\nconst xhr = new XMLHttpRequest();\nxhr.onload = function () {\n  if (xhr.status != 200) {\n    // Error!\n    return;\n  }\n  var responseObj = xhr.response;\n  console.log(responseObj); // response!\n}\nxhr.open(\"GET\", `${HOST}${API}?access_token=${ACCESS_TOKEN}&band_key=${BAND_KEY}&locale=${LOCALE}`);\nxhr.setRequestHeader('Content-Type', 'application/json');\nxhr.responseType = \"json\";\nxhr.send();\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse lib \"lib\";\nuse Https;\nuse Prop;\nuse Json;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 1]\\n\";\nmy $prop = Prop->new(\"info.txt\", \" \");\nmy ($access_token) = $prop->gets(\"access_token\");\nprintf \"환경파일 읽기에 성공했습니다.\\naccess token은 %s입니다.\\n\", $access_token;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 2]\\n\";\nmy $https = Https->new;\n$https->host(\"naver.com\")\n->url(\"/\")\n;\nmy $result = $https->get();\nprintf \"naver.com에 요청을 보냅니다.\\n%s\", $result;\nprint \"\\n\", \"#\"x80, \"\\n\";","더-알아보기#더 알아보기":""}},"/examples/write_post":{"title":"사용자 정보 조회","data":{"":"로그인 사용자의 프로필 정보를 가져옵니다.\nconst ACCESS_TOKEN = '발급받은 ACCESS_TOKEN 입력';\nconst HOST = \"https://openapi.band.us\";\nconst API = \"/v2.2/band/post/create\";\n// parameters\nconst BAND_KEY = \"검색할_밴드_키\";\nconst CONTENT = \"글 내용\";\nconst DO_PUSH = false;\nconst xhr = new XMLHttpRequest();\nxhr.onload = function () {\n  if (xhr.status != 200) {\n    // Error!\n    return;\n  }\n  var responseObj = xhr.response;\n  console.log(responseObj); // response!\n}\nxhr.open(\"POST\", `${HOST}${API}?access_token=${ACCESS_TOKEN}&band_key=${BAND_KEY}&content=${CONTENT}`);\nxhr.setRequestHeader('Content-Type', 'application/json');\nxhr.responseType = \"json\";\nxhr.send();\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse lib \"lib\";\nuse Https;\nuse Prop;\nuse Json;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 1]\\n\";\nmy $prop = Prop->new(\"info.txt\", \" \");\nmy ($access_token) = $prop->gets(\"access_token\");\nprintf \"환경파일 읽기에 성공했습니다.\\naccess token은 %s입니다.\\n\", $access_token;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 2]\\n\";\nmy $https = Https->new;\n$https->host(\"naver.com\")\n->url(\"/\")\n;\nmy $result = $https->get();\nprintf \"naver.com에 요청을 보냅니다.\\n%s\", $result;\nprint \"\\n\", \"#\"x80, \"\\n\";","더-알아보기#더 알아보기":""}},"/examples/remove_post":{"title":"사용자 정보 조회","data":{"":"로그인 사용자의 프로필 정보를 가져옵니다.\nconst ACCESS_TOKEN = '발급받은 ACCESS_TOKEN 입력';\nconst HOST = \"https://openapi.band.us\";\nconst API = \"/v2/band/post/remove\";\n// parameters\nconst BAND_KEY = \"검색할_밴드_키\";\nconst POST_KEY = \"검색할_포스트_키\";\nconst xhr = new XMLHttpRequest();\nxhr.onload = function () {\n  if (xhr.status != 200) {\n    // Error!\n    return;\n  }\n  var responseObj = xhr.response;\n  console.log(responseObj); // response!\n}\nxhr.open(\"POST\", `${HOST}${API}?access_token=${ACCESS_TOKEN}&band_key=${BAND_KEY}&post_key=${POST_KEY}`);\nxhr.setRequestHeader('Content-Type', 'application/json');\nxhr.responseType = \"json\";\nxhr.send();\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse lib \"lib\";\nuse Https;\nuse Prop;\nuse Json;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 1]\\n\";\nmy $prop = Prop->new(\"info.txt\", \" \");\nmy ($access_token) = $prop->gets(\"access_token\");\nprintf \"환경파일 읽기에 성공했습니다.\\naccess token은 %s입니다.\\n\", $access_token;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 2]\\n\";\nmy $https = Https->new;\n$https->host(\"naver.com\")\n->url(\"/\")\n;\nmy $result = $https->get();\nprintf \"naver.com에 요청을 보냅니다.\\n%s\", $result;\nprint \"\\n\", \"#\"x80, \"\\n\";","더-알아보기#더 알아보기":""}},"/examples/write_comment":{"title":"사용자 정보 조회","data":{"":"로그인 사용자의 프로필 정보를 가져옵니다.\nconst ACCESS_TOKEN = '발급받은 ACCESS_TOKEN 입력';\nconst HOST = \"https://openapi.band.us\";\nconst API = \"/v2/band/post/comment/create\";\n// parameters\nconst BAND_KEY = \"검색할_밴드_키\";\nconst POST_KEY = \"검색할_포스트_키\";\nconst BODY = \"댓글 내용\";\nconst xhr = new XMLHttpRequest();\nxhr.onload = function () {\n  if (xhr.status != 200) {\n    // Error!\n    return;\n  }\n  var responseObj = xhr.response;\n  console.log(responseObj); // response!\n}\nxhr.open(\"POST\", `${HOST}${API}?access_token=${ACCESS_TOKEN}&band_key=${BAND_KEY}&post_key=${POST_KEY}&body=${BODY}`);\nxhr.setRequestHeader('Content-Type', 'application/json');\nxhr.responseType = \"json\";\nxhr.send();\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse lib \"lib\";\nuse Https;\nuse Prop;\nuse Json;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 1]\\n\";\nmy $prop = Prop->new(\"info.txt\", \" \");\nmy ($access_token) = $prop->gets(\"access_token\");\nprintf \"환경파일 읽기에 성공했습니다.\\naccess token은 %s입니다.\\n\", $access_token;\nprint \"\\n\", \"#\"x80, \"\\n\";\nprint \"[TEST CASE 2]\\n\";\nmy $https = Https->new;\n$https->host(\"naver.com\")\n->url(\"/\")\n;\nmy $result = $https->get();\nprintf \"naver.com에 요청을 보냅니다.\\n%s\", $result;\nprint \"\\n\", \"#\"x80, \"\\n\";","더-알아보기#더 알아보기":""}},"/overview":{"title":"Band Open API Tutorial By Example","data":{"":"프로그래밍 언어 별 밴드 API 호출 예시.","유저#유저":"","밴드#밴드":"","컨텐츠#컨텐츠":"","권한-조회#권한 조회":"","글#글":"","댓글#댓글":"","앨범사진#앨범/사진":""}},"/tips":{"title":"Tips","data":{"짧은-간격의-호출은-거부됩니다#짧은 간격의 호출은 거부됩니다.":"10초 정도의 시간 간격을 유지하세요."}},"/examples/get_albums":{"title":"Get Albums","data":{}},"/examples/get_bands":{"title":"Get Bands","data":{}},"/examples/get_comments":{"title":"Get Comments","data":{}},"/get_started/steps":{"title":"Access Token 발급 과정","data":{"개발자-센터-접속하기#개발자 센터 접속하기":"밴드 Open Api 개발자 센터 사이트에 접속합니다.\nBAND OPEN API 어플리케이션은 밴드 계정과 연동이 되어야 합니다. 밴드 계정이 없다면 band 에서 가입을 먼저 진행해주세요.","내-서비스-등록-메뉴-접속#내 서비스 등록 메뉴 접속":"내 서비스를 클릭 합니다.내 서비스 등록 버튼을 클릭합니다.","서비스-등록#서비스 등록":"서비스 명은 BAND OPEN API by Perl로 하고 서비스 유형은 원하는 것을 선택합니다.\nRedirect URL은 제 3자가 우리가 만든 앱을 사용하여 밴드 서비스를 이용할 때 사용합니다.\n 밴드 OPEN API 서버로 부터 access token을 전달받을 웹 리소스 위치를 의미합니다.\n이 예제에서는 임의로 값을 넣어 진행합니다.","등록-결과-확인#등록 결과 확인":"방금 생성된 BAND OPEN API by Perl 애플리케이션은 다음과 같습니다.","밴드-계정과-서비스-연동#밴드 계정과 서비스 연동":"Access Token 항목에 밴드 계정 연동 을 클릭하면, 해당 애플리케이션을 위한 토큰을 얻을 수 있습니다.우리가 가진 모든 밴드에 접근 권한을 가진 access token 을 만들기 위해, 아래와 같이 가입한 모든 밴드에 권한을 허용합니다.","--access-token-발급-성공#🎉  Access token 발급 성공":"밴드 계정과 연동된 모든 밴드 접근 권한을 가진 access token 이 생성되었습니다.ZQ 로 시작하고 _xjqf 로 끝나는것이 access token 입니다.\n이 인증 토큰은 OPEN API를 호출한 사용자가 본인이 맞다는 증명서의 역할을 하므로, \n타인에게 노출되는 일이 없도록 보안에 유의해주세요."}},"/":{"title":"시작하기","data":{"":"이 페이지는 Band Open API의 호출/사용 예제를 정리한 문서입니다.\n자세한 API 스펙은 밴드 OPEN API 가이드 문서를 참고해주세요."}},"/get_started/access_token":{"title":"이해하기","data":{"인증-토큰access-token#인증 토큰(Access Token)":"밴드 OPEN API를 사용하기 위해서는 접근하는 정보에 접근할 수 있는 권한을 획득해야 합니다.\n이 권한은 내 서비스에 정보를 등록한 이후에 발급되는 인증 토큰(access token)으로 증명됩니다.access token을 획득하는 가장 쉬운 방법은 BAND OPEN API 서비스를 등록하는 것 입니다. \n다음 페이지에서는 밴드 개발자 사이트에서 OPEN API 어플리케이션을 만들고 access token을 발급 받는 방법을 설명합니다."}}}